resource "aws_lambda_function" "{{ resourceId }}" {
  function_name = "{{ uniqueName }}-function"

  handler = "index.handler"
  {% if language | lower == "javascript" or language | lower == "typescript"  %}
  runtime = "nodejs14.x"
  {% elif language | lower == "python" %}
  runtime = "python3.9"
  {% elif language | lower == "java" %}
  runtime = "java11"
  {% elif language | lower == "dotnet" %}
  runtime = "dotnetcore3.1"
  {% elif language | lower == "go" %}
  runtime = "go1.x"
  {% elif language | lower == "ruby" %}
  runtime = "ruby2.7"
  {% endif %}

  {% if source %}
  s3_bucket = aws_s3_bucket.{{ source.bucket }}.bucket
  s3_key = "{{ source.object }}"
  {% endif %}

  role = aws_iam_role.{{ resourceId }}.arn # role to assume
}

resource "aws_iam_role" "{{ resourceId }}" {
  name = "{{ uniqueName }}-lamda-iam"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": "sts:AssumeRole",
      "Principal": {
        "Service": "lambda.amazonaws.com"
      },
      "Effect": "Allow",
      "Sid": ""
    }
  ]
}
EOF
}

data "aws_iam_policy" "{{ resourceId }}_execution_role" {
  arn = "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
}

# attach execution role to role
resource "aws_iam_role_policy_attachment" "{{ resourceId }}_execution_role_attachment" {
  policy_arn = data.aws_iam_policy.{{ resourceId }}_execution_role.arn
  role       = aws_iam_role.{{ resourceId }}.name
}
